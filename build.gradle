buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://maven.parchmentmc.org' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.parchmentmc:librarian:1.+'
        classpath "org.spongepowered:mixingradle:${mixingradle_version}"
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.parchmentmc.librarian.forgegradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'



version = project.property('mod.version') + "-" + project.property('minecraft_version')
group = project.property('mod.package')
archivesBaseName = project.property('mod.id')

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

mixin {
    add sourceSets.main, "tanfluids.refmap.json"
}

minecraft {
    mappings channel: 'parchment', version: "${parchment_version}-${minecraft_version}"

    runs {
        client {
            workingDirectory project.file('run')
            property 'mixin.env.disableRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'tanfluids'
            arg '-mixin.config=tanfluids.mixins.json'
            mods {
                tanfluids {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'mixin.env.disableRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'tanfluids'
            arg '-mixin.config=tanfluids.mixins.json'
            mods {
                tanfluids {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'tanfluids'
            mods {
                tanfluids {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'tanfluids', '--all', '--output', file('src/generated/resources/')
            mods {
                tanfluids {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {
    maven {
        url = "https://www.cursemaven.com"
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    annotationProcessor "org.spongepowered:mixin:${mixin_version}:processor"
	implementation fg.deobf("curse.maven:tan-246391:3616960")
}

jar {
    manifest {
        attributes([
            "Specification-Title": project.property('mod.name'),
            "Specification-Vendor": project.property('mod.author'),
            "Specification-Version": "1",
            "Implementation-Title": project.property('mod.name'),
            "Implementation-Version": project.property('mod.version'),
            "Implementation-Vendor" : project.property('mod.author'),
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
            "MixinConfigs": "tanfluids.mixins.json"
        ])
    }
}

def reobfFile = file("$buildDir/reobfJar/output.jar")
def reobfArtifact = artifacts.add('default', reobfFile) {
    type 'jar'
    builtBy 'reobfJar'
}
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact reobfArtifact
        }
    }
    repositories {
        maven {
            url "file://C:/dev/maven/mcmodsrepo"
        }
    }
}
